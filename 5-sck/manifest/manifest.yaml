---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-logging/templates/serviceAccount.yaml
apiVersion: v1

kind: ServiceAccount
metadata:
  name: sck-splunk-kubernetes-logging
  labels:
    app: splunk-kubernetes-logging
    chart: splunk-kubernetes-logging-1.4.0
    release: sck
    heritage: Helm
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-metrics/templates/serviceAccount.yaml
apiVersion: v1

kind: ServiceAccount
metadata:
  name: splunk-kubernetes-metrics
  labels:
    app: splunk-kubernetes-metrics
    chart: splunk-kubernetes-metrics-1.4.0
    release: sck
    heritage: Helm
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-objects/templates/serviceAccount.yaml
apiVersion: v1

kind: ServiceAccount
metadata:
  name: splunk-kubernetes-objects
  labels:
    app: splunk-kubernetes-objects
    chart: splunk-kubernetes-objects-1.4.0
    release: sck
    heritage: Helm
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-logging/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: splunk-kubernetes-logging
  labels:
    app: splunk-kubernetes-logging
    chart: splunk-kubernetes-logging-1.4.0
    release: sck
    heritage: Helm
type: Opaque
data:
  splunk_hec_token: NzQyOWU0YWItMDMxNy00YTkzLWI5MWQtYjk0ZDk2MDExMWI4
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-metrics/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: splunk-kubernetes-metrics
  labels:
    app: splunk-kubernetes-metrics
    chart: splunk-kubernetes-metrics-1.4.0
    release: sck
    heritage: Helm
type: Opaque
data:
  splunk_hec_token: NzQyOWU0YWItMDMxNy00YTkzLWI5MWQtYjk0ZDk2MDExMWI4
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-objects/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: splunk-kubernetes-objects
  labels:
    app: splunk-kubernetes-objects
    chart: splunk-kubernetes-objects-1.4.0
    release: sck
    heritage: Helm
type: Opaque
data:
  splunk_hec_token: NzQyOWU0YWItMDMxNy00YTkzLWI5MWQtYjk0ZDk2MDExMWI4
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-logging/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sck-splunk-kubernetes-logging
  labels:
    app: splunk-kubernetes-logging
    chart: splunk-kubernetes-logging-1.4.0
    release: sck
    heritage: Helm
data:
  fluent.conf: |-
    @include system.conf
    @include source.containers.conf
    @include source.files.conf
    @include source.journald.conf
    @include monit.conf
    @include output.conf

  system.conf: |-
    # system wide configurations
    <system>
      log_level info
      root_dir /tmp/fluentd
    </system>

  source.containers.conf: |-
    # This configuration file for Fluentd / td-agent is used
    # to watch changes to Docker log files. The kubelet creates symlinks that
    # capture the pod name, namespace, container name & Docker container ID
    # to the docker logs for pods in the /var/log/containers directory on the host.
    # If running this fluentd configuration in a Docker container, the /var/log
    # directory should be mounted in the container.
    # reading kubelet logs from journal
    #
    # Reference:
    # https://github.com/kubernetes/community/blob/20d2f6f5498a5668bae2aea9dcaf4875b9c06ccb/contributors/design-proposals/node/kubelet-cri-logging.md
    #
    # Json Log Example:
    # {"log":"[info:2016-02-16T16:04:05.930-08:00] Some log text here\n","stream":"stdout","time":"2016-02-17T00:04:05.931087621Z"}
    # CRI Log Example (not supported):
    # 2016-02-17T00:04:05.931087621Z stdout [info:2016-02-16T16:04:05.930-08:00] Some log text here
    <source>
      @id containers.log
      @type tail
      @label @SPLUNK
      tag tail.containers.*
      path /var/log/containers/*.log
      pos_file /var/log/splunk-fluentd-containers.log.pos
      path_key source
      read_from_head true
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
        time_key time
        time_type string
        localtime false
      </parse>
    </source>

  source.files.conf: |-
    # This fluentd conf file contains sources for log files other than container logs.
    <source>
      @id tail.file.kube-audit
      @type tail
      @label @SPLUNK
      tag tail.file.kube:apiserver-audit
      path /var/log/kube-apiserver-audit.log
      pos_file /var/log/splunk-fluentd-kube-audit.pos
      read_from_head true
      path_key source
      <parse>
        @type regexp
        expression /^(?<log>.*)$/
        time_key time
        time_type string
        time_format %Y-%m-%dT%H:%M:%SZ
      </parse>
    </source>


  source.journald.conf: |-
    # This fluentd conf file contains configurations for reading logs from systemd journal.
    <source>
      @id journald-docker
      @type systemd
      @label @SPLUNK
      tag journald.kube:docker
      path "/run/log/journal"
      matches [{ "_SYSTEMD_UNIT": "docker.service" }]
      read_from_head true
      <storage>
        @type local
        persistent true
        path /var/log/splunkd-fluentd-journald-docker.pos.json
      </storage>
      <entry>
        field_map {"MESSAGE": "log", "_SYSTEMD_UNIT": "source"}
        field_map_strict true
      </entry>
    </source>
    <source>
      @id journald-kubelet
      @type systemd
      @label @SPLUNK
      tag journald.kube:kubelet
      path "/run/log/journal"
      matches [{ "_SYSTEMD_UNIT": "kubelet.service" }]
      read_from_head true
      <storage>
        @type local
        persistent true
        path /var/log/splunkd-fluentd-journald-kubelet.pos.json
      </storage>
      <entry>
        field_map {"MESSAGE": "log", "_SYSTEMD_UNIT": "source"}
        field_map_strict true
      </entry>
    </source>


  monit.conf: |-
    <source>
      @id fluentd-monitor-agent
      @type monitor_agent
      @label @SPLUNK
      tag monitor_agent
    </source>


  output.conf: |-
    <label @SPLUNK>
      # = filters for container logs =
      <filter tail.containers.var.log.containers.dns-controller*dns-controller*.log>
        @type concat
        key log
        timeout_label @SPLUNK
        stream_identity_key stream
        multiline_start_regexp /^\w[0-1]\d[0-3]\d/
        flush_interval 5s
        separator ""
        use_first_timestamp true
      </filter>
      <filter tail.containers.var.log.containers.kube-dns*sidecar*.log>
        @type concat
        key log
        timeout_label @SPLUNK
        stream_identity_key stream
        multiline_start_regexp /^\w[0-1]\d[0-3]\d/
        flush_interval 5s
        separator ""
        use_first_timestamp true
      </filter>
      <filter tail.containers.var.log.containers.kube-dns*dnsmasq*.log>
        @type concat
        key log
        timeout_label @SPLUNK
        stream_identity_key stream
        multiline_start_regexp /^\w[0-1]\d[0-3]\d/
        flush_interval 5s
        separator ""
        use_first_timestamp true
      </filter>
      <filter tail.containers.var.log.containers.kube-apiserver*kube-apiserver*.log>
        @type concat
        key log
        timeout_label @SPLUNK
        stream_identity_key stream
        multiline_start_regexp /^\w[0-1]\d[0-3]\d/
        flush_interval 5s
        separator ""
        use_first_timestamp true
      </filter>
      <filter tail.containers.var.log.containers.kube-controller-manager*kube-controller-manager*.log>
        @type concat
        key log
        timeout_label @SPLUNK
        stream_identity_key stream
        multiline_start_regexp /^\w[0-1]\d[0-3]\d/
        flush_interval 5s
        separator ""
        use_first_timestamp true
      </filter>
      <filter tail.containers.var.log.containers.kube-dns-autoscaler*autoscaler*.log>
        @type concat
        key log
        timeout_label @SPLUNK
        stream_identity_key stream
        multiline_start_regexp /^\w[0-1]\d[0-3]\d/
        flush_interval 5s
        separator ""
        use_first_timestamp true
      </filter>
      <filter tail.containers.var.log.containers.kube-proxy*kube-proxy*.log>
        @type concat
        key log
        timeout_label @SPLUNK
        stream_identity_key stream
        multiline_start_regexp /^\w[0-1]\d[0-3]\d/
        flush_interval 5s
        separator ""
        use_first_timestamp true
      </filter>
      <filter tail.containers.var.log.containers.kube-scheduler*kube-scheduler*.log>
        @type concat
        key log
        timeout_label @SPLUNK
        stream_identity_key stream
        multiline_start_regexp /^\w[0-1]\d[0-3]\d/
        flush_interval 5s
        separator ""
        use_first_timestamp true
      </filter>
      <filter tail.containers.var.log.containers.kube-dns*kubedns*.log>
        @type concat
        key log
        timeout_label @SPLUNK
        stream_identity_key stream
        multiline_start_regexp /^\w[0-1]\d[0-3]\d/
        flush_interval 5s
        separator ""
        use_first_timestamp true
      </filter>

      # Enrich log with k8s metadata
      <filter tail.containers.**>
        @type kubernetes_metadata
        annotation_match [ "^splunk\.com" ]
        de_dot false
      </filter>
      <filter tail.containers.**>
        @type record_transformer
        enable_ruby
        <record>
          # set the sourcetype from splunk.com/sourcetype pod annotation or set it to kube:container:CONTAINER_NAME
          sourcetype ${record.dig("kubernetes", "annotations", "splunk.com/sourcetype") ? "kube:"+record.dig("kubernetes", "annotations", "splunk.com/sourcetype") : "kube:container:"+record.dig("kubernetes","container_name")}
          container_name ${record.dig("kubernetes","container_name")}
          namespace ${record.dig("kubernetes","namespace_name")}
          pod ${record.dig("kubernetes","pod_name")}
          container_id ${record.dig("docker","container_id")}
          pod_uid ${record.dig("kubernetes","pod_id")}
          container_image ${record.dig("kubernetes","container_image")}
          # set the cluster_name field to the configured value, or default to "cluster_name"
          cluster_name k8ssai
          # set the index field to the value found in the pod splunk.com/index annotations. if not set, use namespace annotation, or default to the default_index
          index ${record.dig("kubernetes", "annotations", "splunk.com/index") ? record.dig("kubernetes", "annotations", "splunk.com/index") : record.dig("kubernetes", "namespace_annotations", "splunk.com/index") ? (record["kubernetes"]["namespace_annotations"]["splunk.com/index"]) : ("eks_logs")}
          labels_app ${record.dig("kubernetes","labels","app")}
          labels_k8s-app ${record.dig("kubernetes","labels","k8s-app")}
          labels_release ${record.dig("kubernetes","labels","release")}
          blacklist ${record.dig("kubernetes", "annotations", "splunk.com/exclude") ? record.dig("kubernetes", "annotations", "splunk.com/exclude") : record.dig("kubernetes", "namespace_annotations", "splunk.com/exclude") ? (record["kubernetes"]["namespace_annotations"]["splunk.com/exclude"]) : ("false")}
        </record>
      </filter>
      <filter tail.containers.**>
        # Exclude all logs that are blacklisted
        @type grep
        <exclude>
          key blacklist
          pattern /^true$/
        </exclude>
      </filter>
      # extract pod_uid and container_name for CRIO runtime

      # = filters for journald logs =
      <filter journald.kube:kubelet>
        @type concat
        key log
        timeout_label @SPLUNK
        multiline_start_regexp /^\w[0-1]\d[0-3]\d/
        flush_interval 5s
      </filter>

      # create source and sourcetype
      <filter journald.**>
        @type jq_transformer
        jq '.record.source = "/run/log/journal/" + .record.source | .record.sourcetype = (.tag | ltrimstr("journald.")) | .record.cluster_name = "k8ssai" | .record.index = "eks_logs" |.record'
      </filter>

      # = filters for non-container log files =
      # extract sourcetype
      <filter tail.file.**>
        @type jq_transformer
        jq '.record.sourcetype = (.tag | ltrimstr("tail.file.")) | .record.cluster_name = "k8ssai" | .record.index = "eks_logs" | .record'
      </filter>

      # = filters for monitor agent =
      <filter monitor_agent>
        @type jq_transformer
        jq ".record.source = \"namespace:#{ENV['MY_NAMESPACE']}/pod:#{ENV['MY_POD_NAME']}\" | .record.sourcetype = \"fluentd:monitor-agent\" | .record.cluster_name = \"k8ssai\" | .record.index = \"eks_logs\" | .record"
      </filter>

      # = custom filters specified by users =

      # = output =
      <match **>
        @type splunk_hec
        protocol https
        hec_host "splunk.beepbeepboop.org"
        hec_port 8088
        hec_token "#{ENV['SPLUNK_HEC_TOKEN']}"
        index_key index
        insecure_ssl false
        host "#{ENV['K8S_NODE_NAME']}"
        source_key source
        sourcetype_key sourcetype
        <fields>
          # currently CRI does not produce log paths with all the necessary
          # metadata to parse out pod, namespace, container_name, container_id.
          # this may be resolved in the future by this issue: https://github.com/kubernetes/kubernetes/issues/58638#issuecomment-385126031
          container_image
          pod_uid
          pod
          container_name
          namespace
          container_id
          cluster_name
          labels_app
          labels_k8s-app
          labels_release
        </fields>
        <buffer>
          @type memory
          chunk_limit_records 100000
          chunk_limit_size 200m
          flush_interval 5s
          flush_thread_count 1
          overflow_action block
          retry_max_times 3
          total_limit_size 600m
        </buffer>
        <format monitor_agent>
          @type json
        </format>
        <format>
          # we just want to keep the raw logs, not the structure created by docker or journald
          @type single_value
          message_key log
          add_newline false
        </format>
      </match>
    </label>
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-metrics/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sck-splunk-kubernetes-metrics
  labels:
    app: splunk-kubernetes-metrics
    chart: splunk-kubernetes-metrics-1.4.0
    release: sck
    heritage: Helm
data:
  fluent.conf: |
    # system wide configurations
    <system>
      log_level info
    </system>
    <source>
      @type kubernetes_metrics
      tag kube.*
      node_name "#{ENV['NODE_NAME']}"
      kubelet_address "#{ENV['KUBERNETES_NODE_IP']}"
      kubelet_port 10250
      use_rest_client_ssl true
      insecure_ssl true
      cluster_name k8ssai
      interval 60s
    </source>
    <filter kube.**>
      @type record_modifier
      <record>
        metric_name ${tag}
        cluster_name k8ssai
      </record>
    </filter>
    <filter kube.node.**>
      @type record_modifier
      <record>
        source ${record['node']}
      </record>
    </filter>
    <filter kube.pod.**>
      @type record_modifier
      <record>
        source ${record['node']}/${record['pod-name']}
      </record>
    </filter>
    <filter kube.sys-container.**>
      @type record_modifier
      <record>
        source ${record['node']}/${record['pod-name']}/${record['name']}
      </record>
    </filter>
    <filter kube.container.**>
      @type record_modifier
      <record>
        source ${record['node']}/${record['pod-name']}/${record['container-name']}
      </record>
    </filter>
    # = custom filters specified by users =
    <match kube.**>
      @type splunk_hec
      data_type metric
      metric_name_key metric_name
      metric_value_key value
      protocol https
      hec_host "splunk.beepbeepboop.org"
      hec_port 8088
      hec_token "#{ENV['SPLUNK_HEC_TOKEN']}"
      host "#{ENV['NODE_NAME']}"
      index eks_metrics
      source ${tag}
      insecure_ssl false
      <buffer>
        @type memory
        chunk_limit_records 10000
        chunk_limit_size 100m
        flush_interval 5s
        flush_thread_count 1
        overflow_action block
        retry_max_times 3
        total_limit_size 400m
      </buffer>
    </match>
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-metrics/templates/configMapMetricsAggregator.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sck-splunk-kubernetes-metrics-aggregator
  labels:
    app: splunk-kubernetes-metrics
    chart: splunk-kubernetes-metrics-1.4.0
    release: sck
    heritage: Helm
data:
  fluent.conf: |
    # system wide configurations
    <system>
      log_level info
    </system>
    <source>
      @type kubernetes_metrics_aggregator
      tag kube.*
      kubelet_port 10250
      cluster_name k8ssai
      interval 60s
    </source>
    <filter kube.**>
      @type record_modifier
      <record>
        metric_name ${tag}
        cluster_name k8ssai
      </record>
    </filter>
    <filter kube.cluster.**>
      @type record_modifier
      <record>
        source ${record['name']}
      </record>
    </filter>
    <filter kube.namespace.**>
      @type record_modifier
      <record>
        source ${record['name']}
      </record>
    </filter>
    <filter kube.node.**>
      @type record_modifier
      <record>
        source ${record['node']}
      </record>
    </filter>
    <filter kube.pod.**>
      @type record_modifier
      <record>
        source ${record['node']}/${record['pod-name']}
      </record>
    </filter>
    <filter kube.sys-container.**>
      @type record_modifier
      <record>
        source ${record['node']}/${record['pod-name']}/${record['name']}
      </record>
    </filter>
    <filter kube.container.**>
      @type record_modifier
      <record>
        source ${record['node']}/${record['pod-name']}/${record['container-name']}
      </record>
    </filter>
    <match kube.**>
      @type splunk_hec
      data_type metric
      metric_name_key metric_name
      metric_value_key value
      protocol https
      hec_host "splunk.beepbeepboop.org"
      hec_port 8088
      hec_token "#{ENV['SPLUNK_HEC_TOKEN']}"
      host "#{ENV['NODE_NAME']}"
      index eks_metrics
      source source
      insecure_ssl false
      <buffer>
        @type memory
        chunk_limit_records 10000
        chunk_limit_size 100m
        flush_interval 5s
        flush_thread_count 1
        overflow_action block
        retry_max_times 3
        total_limit_size 400m
      </buffer>
    </match>
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-objects/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sck-splunk-kubernetes-objects
  labels:
    app: splunk-kubernetes-objects
    chart: splunk-kubernetes-objects-1.4.0
    release: sck
    heritage: Helm
data:
  fluent.conf: |
    <system>
      log_level info
    </system>
    <source>
      @type kubernetes_objects
      tag kube.objects.*
      api_version "apps/v1"
      insecure_ssl true
      <pull>
        resource_name daemon_sets
        interval 60s
      </pull>
      <pull>
        resource_name deployments
        interval 60s
      </pull>
      <pull>
        resource_name replica_sets
        interval 60s
      </pull>
      <pull>
        resource_name stateful_sets
        interval 60s
      </pull>
    </source>
    <source>
      @type kubernetes_objects
      tag kube.objects.*
      api_version "v1"
      insecure_ssl true
      <pull>
        resource_name pods
        interval 60s
      </pull>
      <pull>
        resource_name nodes
        interval 60s
      </pull>
      <pull>
        resource_name component_statuses
        interval 60s
      </pull>
      <pull>
        resource_name config_maps
        interval 60s
      </pull>
      <pull>
        resource_name namespaces
        interval 60s
      </pull>
      <pull>
        resource_name persistent_volumes
        interval 60s
      </pull>
      <pull>
        resource_name persistent_volume_claims
        interval 60s
      </pull>
      <pull>
        resource_name resource_quotas
        interval 60s
      </pull>
      <pull>
        resource_name services
        interval 60s
      </pull>
      <pull>
        resource_name service_accounts
        interval 60s
      </pull>
      <watch>
        resource_name events
      </watch>
    </source>

    <filter kube.**>
      @type jq_transformer
      # in ruby '\\' will escape and become just '\', since we need two '\' in the `gsub` jq filter, it becomes '\\\\'.
      jq '.record.source = "namespace:\(env.MY_NAMESPACE)/pod:\(env.MY_POD_NAME)" | .record.sourcetype = (.tag | gsub("\\\\."; ":")) | .record'
    </filter>

    <filter kube.**>
      @type jq_transformer
      jq '.record.cluster_name = "k8ssai" | .record'
    </filter>

    # = custom filters specified by users =

    <match kube.**>
      @type splunk_hec
      protocol https
      hec_host "splunk.beepbeepboop.org"
      hec_port 8088
      hec_token "#{ENV['SPLUNK_HEC_TOKEN']}"
      host "#{ENV['NODE_NAME']}"
      source_key source
      sourcetype_key sourcetype
      index eks_meta
      insecure_ssl false
      <fields>
        cluster_name
      </fields>
      <buffer>
        @type memory
        chunk_limit_records 10000
        chunk_limit_size 200m
        flush_interval 3s
        flush_thread_count 1
        overflow_action block
        retry_max_times 3
        total_limit_size 600m
      </buffer>
    </match>
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-logging/templates/clusterRole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: sck-splunk-kubernetes-logging
  labels:
    app: splunk-kubernetes-logging
    chart: splunk-kubernetes-logging-1.4.0
    release: sck
    heritage: Helm
rules:
- apiGroups:
    - ""
  resources:
    - "namespaces"
    - "pods"
  verbs:
    - "list"
    - "get"
    - "watch"
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-metrics/templates/clusterRole.yaml
# This role allows read access to the kubelet summary API
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubelet-summary-api-read
  labels:
    app: splunk-kubernetes-metrics
    chart: splunk-kubernetes-metrics-1.4.0
    release: sck
    heritage: Helm
rules:
- apiGroups:
  - ""
  resources:
  - "nodes"
  - "nodes/stats"
  - "nodes/metrics"
  verbs:
  - "get"
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-metrics/templates/clusterRoleAggregator.yaml
# This role allows read access to the kubelet summary API
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-api-aggregator
  labels:
    app: splunk-kubernetes-metrics
    chart: splunk-kubernetes-metrics-1.4.0
    release: sck
    heritage: Helm
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/stats
  - nodes/proxy
  - pods
  verbs:
  - get
  - list
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-objects/templates/clusterRole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: sck-splunk-kubernetes-objects
  labels:
    app: splunk-kubernetes-objects
    chart: splunk-kubernetes-objects-1.4.0
    release: sck
    heritage: Helm
rules:
  
  - apiGroups: [""]
    resources:
    - pods
    - nodes
    - componentstatuses
    - configmaps
    - namespaces
    - persistentvolumes
    - persistentvolumeclaims
    - resourcequotas
    - services
    - serviceaccounts
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources:
    - events
    verbs: ["watch"]
  - apiGroups: ["apps"]
    resources:
    - daemonsets
    - deployments
    - replicasets
    - statefulsets
    verbs: ["get", "list"]
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-logging/templates/clusterRoleBinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: sck-splunk-kubernetes-logging
  labels:
    app: splunk-kubernetes-logging
    chart: splunk-kubernetes-logging-1.4.0
    release: sck
    heritage: Helm
roleRef:
  kind: ClusterRole
  name: sck-splunk-kubernetes-logging
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: sck-splunk-kubernetes-logging
  namespace: sck
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-metrics/templates/clusterRoleBinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sck-splunk-kubernetes-metrics
  labels:
    app: splunk-kubernetes-metrics
    chart: splunk-kubernetes-metrics-1.4.0
    release: sck
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "kubelet-summary-api-read"
subjects:
- kind: ServiceAccount
  name: splunk-kubernetes-metrics
  namespace: sck
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-metrics/templates/clusterRoleBindingAggregator.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sck-splunk-kubernetes-metrics-aggregator
  labels:
    app: splunk-kubernetes-metrics
    chart: splunk-kubernetes-metrics-1.4.0
    release: sck
    heritage: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: "kube-api-aggregator"
subjects:
- kind: ServiceAccount
  name: splunk-kubernetes-metrics
  namespace: sck
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-objects/templates/clusterRoleBinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: sck-splunk-kubernetes-objects
  labels:
    app: splunk-kubernetes-objects
    chart: splunk-kubernetes-objects-1.4.0
    release: sck
    heritage: Helm
roleRef:
  kind: ClusterRole
  name: sck-splunk-kubernetes-objects
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: splunk-kubernetes-objects
  namespace: sck
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-logging/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sck-splunk-kubernetes-logging
  labels:
    app: splunk-kubernetes-logging
    chart: splunk-kubernetes-logging-1.4.0
    release: sck
    heritage: Helm
    engine: fluentd
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: splunk-kubernetes-logging
      release: sck
  template:
    metadata:
      labels:
        app: splunk-kubernetes-logging
        release: sck
      annotations:
        checksum/config: ee5492f63b2dd93de649fc2d022339587b96cf389a52a93471064d904616ccbd
    spec:
      serviceAccountName: sck-splunk-kubernetes-logging
      nodeSelector:
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      containers:
      - name: splunk-fluentd-k8s-logs
        image: docker.io/splunk/fluentd-hec:1.2.1
        imagePullPolicy: Always
        securityContext:
          privileged: true
          runAsUser: 0
        env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SPLUNK_HEC_TOKEN
            valueFrom:
              secretKeyRef:
                name: splunk-kubernetes-logging
                key: splunk_hec_token
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlogdest
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: journallogpath
          mountPath: "/run/log/journal"
          readOnly: true
        - name: conf-configmap
          mountPath: /fluentd/etc
        - name: secrets
          mountPath: /fluentd/etc/splunk
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlogdest
        hostPath:
          path: /var/lib/docker/containers
      - name: journallogpath
        hostPath:
          path: "/run/log/journal"
      - name: conf-configmap
        configMap:
          name: sck-splunk-kubernetes-logging
      - name: secrets
        secret:
          secretName: splunk-kubernetes-logging
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-metrics/templates/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: sck-splunk-kubernetes-metrics
  labels:
    app: splunk-kubernetes-metrics
    chart: splunk-kubernetes-metrics-1.4.0
    release: sck
    heritage: Helm
    engine: fluentd
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: sck-splunk-kubernetes-metrics
  template:
    metadata:
      name: sck-splunk-kubernetes-metrics
      labels:
        name: sck-splunk-kubernetes-metrics
        app: splunk-kubernetes-metrics
        chart: splunk-kubernetes-metrics-1.4.0
        release: sck
        heritage: Helm
        engine: fluentd
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        checksum/config: 8a9f4f0f9c96a62ee481d8e9d2dce316c02a3798cc9663d86534eed7e67437f1
    spec:
      serviceAccountName: splunk-kubernetes-metrics
      nodeSelector:
        beta.kubernetes.io/os: linux
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
      containers:
      - name: splunk-fluentd-k8s-metrics
        image: docker.io/splunk/k8s-metrics:1.1.3
        imagePullPolicy: Always
        env:
          - name: KUBERNETES_NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: SPLUNK_HEC_TOKEN
            valueFrom:
              secretKeyRef:
                name: splunk-kubernetes-metrics
                key: splunk_hec_token
        resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 300Mi
        volumeMounts:
          - name: conf-configmap
            mountPath: /fluentd/etc
          - name: secrets
            mountPath: /fluentd/etc/splunk
            readOnly: true
      volumes:
      - name: conf-configmap
        configMap:
          name: sck-splunk-kubernetes-metrics
      - name: secrets
        secret:
          secretName: splunk-kubernetes-metrics
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-metrics/templates/deploymentMetricsAggregator.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sck-splunk-kubernetes-metrics-agg
  labels:
    app: splunk-kubernetes-metrics
    chart: splunk-kubernetes-metrics-1.4.0
    release: sck
    heritage: Helm
spec:
  strategy:
    type: RollingUpdate
  replicas: 1
  selector:
    matchLabels:
      app: splunk-kubernetes-metrics
      release: sck
  template:
    metadata:
      labels:
        app: splunk-kubernetes-metrics
        release: sck
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        checksum/config: 2418a34f17b0e1f3c13e966c58acf5ca317d5b8bc1d962b4d78e88609d14f999
    spec:
      serviceAccountName: splunk-kubernetes-metrics
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - name: splunk-fluentd-k8s-metrics-agg
        image: docker.io/splunk/k8s-metrics-aggr:1.1.2
        imagePullPolicy: Always
        env:
          - name: SPLUNK_HEC_TOKEN
            valueFrom:
              secretKeyRef:
                name: splunk-kubernetes-metrics
                key: splunk_hec_token
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 200m
              memory: 300Mi
        volumeMounts:
          - name: conf-configmap
            mountPath: /fluentd/etc
          - name: secrets
            mountPath: /fluentd/etc/splunk
            readOnly: true
      volumes:
      - name: conf-configmap
        configMap:
          name: sck-splunk-kubernetes-metrics-aggregator
      - name: secrets
        secret:
          secretName: splunk-kubernetes-metrics
---
# Source: splunk-connect-for-kubernetes/charts/splunk-kubernetes-objects/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sck-splunk-kubernetes-objects
  labels:
    app: splunk-kubernetes-objects
    chart: splunk-kubernetes-objects-1.4.0
    release: sck
    heritage: Helm
spec:
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: splunk-kubernetes-objects
      release: sck
      engine: fluentd
  replicas: 1
  template:
    metadata:
      labels:
        app: splunk-kubernetes-objects
        release: sck
        engine: fluentd
      annotations:
        checksum/config: f8f1e7f0db42474b16ec6f74e7d852e567e3dbfbc1679d826aa75f9d3d373f5b
    spec:
      serviceAccountName: splunk-kubernetes-objects
      terminationGracePeriodSeconds: 30
      nodeSelector:
        beta.kubernetes.io/os: linux
      containers:
      - name: splunk-fluentd-k8s-objects
        image: docker.io/splunk/kube-objects:1.1.3
        imagePullPolicy: Always
        env:
          - name: MY_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: SPLUNK_HEC_TOKEN
            valueFrom:
              secretKeyRef:
                name: splunk-kubernetes-objects
                key: splunk_hec_token
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: conf-configmap
          mountPath: /fluentd/etc
        - name: secrets
          mountPath: /fluentd/etc/splunk
          readOnly: true
      volumes:
      - name: conf-configmap
        configMap:
          name: sck-splunk-kubernetes-objects
      - name: secrets
        secret:
          secretName: splunk-kubernetes-objects
